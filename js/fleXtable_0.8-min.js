function fleXtable(l,e,n,r){if(typeof r==="undefined"){r=false}var o=document.getElementById(l);var a=o.getElementsByTagName("tr");var c=a[0];var t=c.querySelectorAll("td,th");var f=t.length;var s=[];var u=checkFoldableColumns(l,e,a,f,s,r);for(var d=0;d<a.length;d++){var p=0;var C=0;for(var T=0;T<f;T++){if(s.indexOf(d+"/"+p)==-1){currentCell=a[d].cells[C];if(currentCell.getAttribute("rowspan")&&currentCell.getAttribute("colspan")){cellRowSpan=currentCell.getAttribute("rowspan");cellColSpan=currentCell.getAttribute("colspan");for(i=0;i<cellRowSpan;i++){for(j=0;j<cellColSpan;j++){if(i!=0||j!=0){s.push(d+i+"/"+(p+j))}else if(i==0&&j==0){}}}}else if(currentCell.getAttribute("rowspan")){if(u.indexOf(p)!=-1){currentCell.setAttribute("flexT",l+"-"+p);currentCell.classList.add("flexT-fold")}cellRowSpan=currentCell.getAttribute("rowspan");for(i=1;i<cellRowSpan;i++){s.push(d+i+"/"+p);currentCell.classList.add("flexT")}}else if(currentCell.getAttribute("colspan")){cellColSpan=currentCell.getAttribute("colspan");if(u.indexOf(p)==-1||canceledCols.indexOf[j]==-1){}else{cancelAllSpanCols=false;currentCell.setAttribute("flexT",l+"-"+p);currentCell.classList.add("flexT-fold")}for(i=1;i<cellColSpan;i++){s.push(d+"/"+(p+i))}}else if(currentCell.getAttribute("rowspan")==null&&currentCell.getAttribute("colspan")==null&&u.indexOf(p)!=-1){currentCell.setAttribute("flexT",l+"-"+p);currentCell.classList.add("flexT-fold")}C++}p++}}var v=makeId();o.setAttribute("flexT",v);var x=o.parentNode;var m=document.createElement("div");m.setAttribute("id",l+"-flexT-wrapper");m.style.overflowX="auto";m.style.position="relative";var w=o;x.replaceChild(m,o);m.appendChild(w);var h=document.createElement("div");h.setAttribute("id",l+"-flexT-command");h.setAttribute("class","flexT-command");h.setAttribute("flexT",l);m.parentNode.insertBefore(h,m);var S=document.createElement("div");S.setAttribute("id",l+"-flexT-switch");S.setAttribute("class","flexT-select flexT-fold");S.setAttribute("flexT",l);h.appendChild(S);for(var b in u){S.innerHTML+='<div class="flexT-options" onclick="flexTSwitch(this); flexTItemsCascading(\''+l+"','"+u[b]+"')\">"+t[u[b]].innerHTML+"</div>"}if(u.length>0){var k=document.createElement("button");k.setAttribute("type","button");k.setAttribute("class","flexT-switch");k.setAttribute("onclick","flexTSwitch('"+l+"-flexT-switch')");k.setAttribute("flexT",l);k.innerHTML=f-u.length+" / "+f;h.appendChild(k)}var y='<style type="text/css" media="screen">\n';y+="   @media screen and (max-width: "+n+"px)\n";y+="   {\n";y+="       th.flexT-fold,\n";y+="       td.flexT-fold,\n";y+="       div.flexT-select.flexT-fold {\n";y+="           display: none;\n";y+="       }\n";y+="   }\n";y+="   @media screen and (min-width: "+(parseInt(n)+1)+"px)\n";y+="   {\n";y+="       button.flexT-switch,\n";y+="       div.flexT-select { display: none; }\n";y+="   }\n";y+="</style>\n";var g=document.head;g.innerHTML+=y}function makeId(){var l="";var e="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";for(var n=0;n<10;n++)l+=e.charAt(Math.floor(Math.random()*e.length));return l}function flexTItemsCascading(l,e){var n=document.getElementById(l);var r=n.querySelectorAll("td,th");var o=n.getElementsByTagName("tr")[0];var a=o.querySelectorAll("td,th");for(i=0;i<r.length;i++){if(r[i].hasAttribute("flexT")&&r[i].getAttribute("flexT")==l+"-"+e){flexTSwitch(r[i])}}var c=0;for(i=0;i<a.length;i++){if(a[i].className.indexOf("flexT-fold")==-1){c++}}var t=document.getElementsByTagName("button");for(var f=0;f<t.length;f++){if(t[f].hasAttribute("flexT")&&t[f].getAttribute("flexT")==l){label=t[f].innerHTML;c=c+" ";afterCounter=label.match(/\/\s\d+/);break}}t[f].innerHTML=c+afterCounter}function flexTSwitch(l){if(typeof l==="string"){l=document.getElementById(l)}l.classList.toggle("flexT-fold");return true}function flexTTurnOffAllSelectors(){elems=document.getElementsByClassName("flexT-select");for(i=0;i<elems.length;i++){elems[i].classList.add("flexT-fold")}return true}function checkFoldableColumns(l,e,n,r,o,a){var c=[];for(var t=0;t<n.length;t++){var f=0;var s=0;for(var u=0;u<r;u++){if(o.indexOf(t+"/"+f)==-1){currentCell=n[t].cells[s];if(currentCell.getAttribute("rowspan")&&currentCell.getAttribute("colspan")){cellRowSpan=currentCell.getAttribute("rowspan");cellColSpan=currentCell.getAttribute("colspan");for(i=0;i<cellRowSpan;i++){for(j=0;j<cellColSpan;j++){if(i!=0||j!=0){o.push(t+i+"/"+(f+j))}else if(i==0&&j==0){if(a==true){currentCell.classList.add("debug-rowspan-colspan")}for(k=0;k<cellColSpan;k++){addToCanceledCols(c,f+k);console.log("fleXtable alert: In table #"+l+", column "+(f+k)+" cannot be hidden because of colspan property applied on a cell of column "+f+" which is not supposed to be hidden")}}}}}else if(currentCell.getAttribute("rowspan")){cellRowSpan=currentCell.getAttribute("rowspan");for(i=1;i<cellRowSpan;i++){o.push(t+i+"/"+f);if(a==true){currentCell.classList.add("debug-rowspan")}}}else if(currentCell.getAttribute("colspan")){cellColSpan=currentCell.getAttribute("colspan");if(e.indexOf(f)==-1||c.indexOf[j]==-1){for(i=1;i<cellColSpan;i++){addToCanceledCols(c,f+i);console.log("fleXtable alert: In table #"+l+", column "+(f+i)+" cannot be hidden because of colspan property applied on a cell of column "+f+" which is not supposed to be hidden")}}else{cancelAllSpanCols=false;for(i=1;i<cellColSpan;i++){if(e.indexOf(f+i)!=-1){cancelAllSpanCols=true;cancellingColumn=f+i}}if(cancelAllSpanCols==true){for(i=0;i<cellColSpan;i++){addToCanceledCols(c,f+i);console.log("fleXtable alert: In table #"+l+", column "+(f+i)+" cannot be hidden because of colspan property applied on a cell of column "+cancellingColumn+" which is not supposed to be hidden")}}}for(i=1;i<cellColSpan;i++){o.push(t+"/"+(f+i));if(a==true){currentCell.classList.add("debug-colspan")}}}s++}f++}}var d=[];for(i=0;i<e.length;i++){if(c.indexOf(e[i])==-1){d.push(e[i])}}return d}function addToCanceledCols(l,e){if(l.indexOf(e)==-1){l.push(e)}return l}